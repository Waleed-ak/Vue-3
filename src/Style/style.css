:root {
  --Color: rgba(255, 255, 255, 0.87);
  --Color-a: #67f;
  --Color-a-hover: rgba(255, 255, 255, 0.87);
  --BgColor: #222;
  --BgColorHover: #333;
  --ColorPrimary: rgb(255, 255, 255);
  --ColorPrimaryBg: #408ad4;
  --ColorPrimaryBorder: #408ad4;
  --ColorPrimaryHover: #25609b;
  --ColorSuccess: rgb(255, 255, 255);
  --ColorSuccessBg: #549931;
  --ColorSuccessBorder: #549931;
  --ColorSuccessHover: #254c12;
  --ColorInfo: #fff;
  --ColorInfoBg: #333;
  --ColorInfoBorder: #333;
  --ColorInfoHover: #242222;
  --ColorWarning: #fff;
  --ColorWarningBg: #e19727;
  --ColorWarningBorder: #e19727;
  --ColorWarningHover: #83550f;
  --ColorDanger: #fff;
  --ColorDangerBg: #e05656;
  --ColorDangerBorder: #e05656;
  --ColorDangerHover: #942f2f;
  font-size: 1rem;
  font-family: Inter, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5rem;
  font-weight: 400;
  color-scheme: light dark;
  color: var(--Color);
  background-color: var(--BgColor);
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

@media (prefers-color-scheme: light) {
  :root {
    --Color: rgba(0, 0, 0, 0.87);
    --BgColor: #eee;
    --BgColorHover: #fff;
  }
}
@media (prefers-color-scheme: dark) {
  :root {
    --Color: rgba(255, 255, 255, 0.87);
    --BgColor: #222;
    --BgColorHover: #333;
  }
}
/* For browsers that support automatic dark/light mode
   As well as system colors, set those */
@supports (color-scheme: light dark) and (background-color: Canvas) and (color: CanvasText) {
  :root {
    --Color: CanvasText;
    --BgColor: Canvas;
  }
}
/* For Safari on iOS. Hacky, but it works. */
@supports (background-color: -apple-system-control-background) and (color: text) {
  :root {
    --Color: text;
    --BgColor: -apple-system-control-background;
  }
}
a {
  font-weight: 500;
  color: var(--Color-a);
  text-decoration: inherit;
}
a:hover {
  color: var(--Color-a-hover);
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

#app {
  width: 98%;
  margin: auto;
}

body {
  height: 100vh;
  width: 100vw;
  margin: 0;
}

:is(header, footer, aside, main, body, .el-header, .el-footer, .el-aside, .el-main) {
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  align-items: center;
}

.vertical {
  flex-direction: column;
}
.vertical > * {
  width: 100%;
}

.horizontal {
  flex-direction: row;
}
.horizontal > * {
  height: 100%;
}

.fxContainer {
  flex: 1;
  height: 100%;
  width: 100%;
}

.fz30 {
  font-size: 3 rem;
}
.fz20 {
  font-size: 2 rem;
}
.fz16 {
  font-size: 1.6 rem;
}
.fz14 {
  font-size: 1.4 rem;
}
.fz12 {
  font-size: 1.2 rem;
}
.fz08 {
  font-size: 0.8 rem;
}
.fz06 {
  font-size: 0.6 rem;
}
.fz05 {
  font-size: 0.5 rem;
}
.fz04 {
  font-size: 0.4 rem;
}

.fw1 {
  font-weight: 80;
}
.fw2 {
  font-weight: 100;
}
.fw3 {
  font-weight: 250;
}
.fw4 {
  font-weight: 400;
}
.fw5 {
  font-weight: 600;
}
.fw6 {
  font-weight: 800;
}
.fw-light {
  font-weight: 200;
}
.fw-bold {
  font-weight: 600;
}
.fw-bolder {
  font-weight: 800;
}

.is1of12 {
  width: 8.3325%;
}
.is2of12 {
  width: 16.665%;
}
.is3of12 {
  width: 24.9975%;
}
.is4of12 {
  width: 33.33%;
}
.is5of12 {
  width: 41.6625%;
}
.is6of12 {
  width: 49.995%;
}
.is7of12 {
  width: 58.3275%;
}
.is8of12 {
  width: 66.66%;
}
.is9of12 {
  width: 74.9925%;
}
.is10of12 {
  width: 83.325%;
}
.is11of12 {
  width: 91.6575%;
}
.is12of12 {
  width: 99.99%;
}

.va-middle > * {
  vertical-align: middle;
}
.va-top > * {
  vertical-align: top;
}
.va-bottom > * {
  vertical-align: bottom;
}

.fx {
  display: flex;
  margin: -0.75 rem;
}
.fx:first-child {
  margin-top: 0.75 rem;
}
.fx:last-child {
  margin-bottom: 0.75 rem;
}
.fx.vertical {
  flex-direction: column;
}
.fx.horizontal {
  flex-direction: row;
}

.fxItem {
  display: block;
  flex: 1;
  padding: 0.75 rem;
}

.center {
  margin-left: auto;
  margin-right: auto;
}

.right {
  float: right;
}

.btn {
  --ColorBtn: var(--Color);
  --ColorBtnBg: var(--BgColor);
  --ColorBtnBorder: var(--Color);
  --ColorBtnHover: var(--BgColorHover);
  --RadiusBtnBorder: 0.3rem;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  white-space: nowrap;
  cursor: pointer;
  color: var(--ColorBtn);
  text-align: center;
  box-sizing: border-box;
  outline: none;
  transition: 0.1s;
  font-weight: 400;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  vertical-align: middle;
  background-color: var(--ColorBtnBg);
  border: thin solid var(--ColorBtnBorder);
  padding: 0.3rem 1rem;
  font-size: 1rem;
  border-radius: var(--RadiusBtnBorder);
}
.btn + .btn {
  margin-left: 0.4rem;
}
.btn.round {
  --RadiusBtnBorder: 2rem;
}
.btn:where(:hover, :focus) {
  background-color: var(--ColorBtnHover);
}
.btn.primary {
  --ColorBtn: var(--ColorPrimary);
  --ColorBtnBg: var(--ColorPrimaryBg);
  --ColorBtnBorder: var(--ColorPrimaryBorder);
  --ColorBtnHover: var(--ColorPrimaryHover);
}
.btn.info {
  --ColorBtn: var(--ColorInfo);
  --ColorBtnBg: var(--ColorInfoBg);
  --ColorBtnBorder: var(--ColorInfoBorder);
  --ColorBtnHover: var(--ColorInfoHover);
}
.btn.success {
  --ColorBtn: var(--ColorSuccess);
  --ColorBtnBg: var(--ColorSuccessBg);
  --ColorBtnBorder: var(--ColorSuccessBorder);
  --ColorBtnHover: var(--ColorSuccessHover);
}
.btn.warning {
  --ColorBtn: var(--ColorWarning);
  --ColorBtnBg: var(--ColorWarningBg);
  --ColorBtnBorder: var(--ColorWarningBorder);
  --ColorBtnHover: var(--ColorWarningHover);
}
.btn.alert {
  --ColorBtn: var(--ColorAlert);
  --ColorBtnBg: var(--ColorAlertBg);
  --ColorBtnBorder: var(--ColorAlertBorder);
  --ColorBtnHover: var(--ColorAlertHover);
}
.btn.danger {
  --ColorBtn: var(--ColorDanger);
  --ColorBtnBg: var(--ColorDangerBg);
  --ColorBtnBorder: var(--ColorDangerBorder);
  --ColorBtnHover: var(--ColorDangerHover);
}