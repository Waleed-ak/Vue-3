:root {
  --Color: rgba(255, 255, 255, 0.87);
  --Color-a: #67f;
  --Color-a-hover: rgba(255, 255, 255, 0.87);
  --BgColor: #222;
  --BgColorHover: #333;
  --ColorPrimary: rgb(255, 255, 255);
  --ColorPrimaryBg: #408ad4;
  --ColorPrimaryBorder: #408ad4;
  --ColorPrimaryHover: #25609b;
  --ColorSuccess: rgb(255, 255, 255);
  --ColorSuccessBg: #549931;
  --ColorSuccessBorder: #549931;
  --ColorSuccessHover: #254c12;
  --ColorInfo: #fff;
  --ColorInfoBg: #333;
  --ColorInfoBorder: #333;
  --ColorInfoHover: #242222;
  --ColorWarning: #fff;
  --ColorWarningBg: #e19727;
  --ColorWarningBorder: #e19727;
  --ColorWarningHover: #83550f;
  --ColorDanger: #fff;
  --ColorDangerBg: #e05656;
  --ColorDangerBorder: #e05656;
  --ColorDangerHover: #942f2f;
  font-size: 1rem;
  font-family: Inter, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5rem;
  font-weight: 400;
  color-scheme: light dark;
  color: var(--Color);
  background-color: var(--BgColor);
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

@media (prefers-color-scheme: light) {
  :root {
    --Color: rgba(0, 0, 0, 0.87);
    --BgColor: #eee;
    --BgColorHover: #fff;
  }
}
@media (prefers-color-scheme: dark) {
  :root {
    --Color: rgba(255, 255, 255, 0.87);
    --BgColor: #222;
    --BgColorHover: #333;
  }
}
/* For browsers that support automatic dark/light mode
   As well as system colors, set those */
@supports (color-scheme: light dark) and (background-color: Canvas) and (color: CanvasText) {
  :root {
    --Color: CanvasText;
    --BgColor: Canvas;
  }
}
/* For Safari on iOS. Hacky, but it works. */
@supports (background-color: -apple-system-control-background) and (color: text) {
  :root {
    --Color: text;
    --BgColor: -apple-system-control-background;
  }
}
a {
  font-weight: 500;
  color: var(--Color-a);
  text-decoration: inherit;
}
a:hover {
  color: var(--Color-a-hover);
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

#app {
  width: 98%;
  margin: auto;
}

body {
  height: 100vh;
  width: 100vw;
  margin: 0;
}
body > #app {
  height: 100%;
  width: 100%;
  margin: 0;
}

.conCols {
  display: flex;
  flex-direction: row;
  margin: 0;
}
.conCols > * {
  height: 99.7%;
}

.conRows {
  display: flex;
  flex-direction: column;
  margin: 0;
}
.conRows > * {
  width: 99.7%;
}

.conElement {
  background-color: azure;
  border-radius: 3;
  border: 1px solid #ddd;
}

.conBody {
  background-color: aqua;
  flex: auto;
  width: 100%;
  height: 100%;
}

.fzl1 {
  font-size: 1.2 rem;
}
.fzl2 {
  font-size: 1.4 rem;
}
.fzl3 {
  font-size: 1.6 rem;
}
.fzl4 {
  font-size: 1.8 rem;
}
.fzl5 {
  font-size: 2 rem;
}
.fzl6 {
  font-size: 2.2 rem;
}
.fzl7 {
  font-size: 2.4 rem;
}
.fzl8 {
  font-size: 2.6 rem;
}
.fzl9 {
  font-size: 2.8 rem;
}
.fzl10 {
  font-size: 3 rem;
}
.fzl11 {
  font-size: 3.2 rem;
}
.fzl12 {
  font-size: 3.4 rem;
}
.fzl13 {
  font-size: 3.6 rem;
}
.fzl14 {
  font-size: 3.8 rem;
}
.fzl15 {
  font-size: 4 rem;
}
.fzl16 {
  font-size: 4.2 rem;
}
.fzl17 {
  font-size: 4.4 rem;
}
.fzl18 {
  font-size: 4.6 rem;
}
.fzl19 {
  font-size: 4.8 rem;
}
.fzl20 {
  font-size: 5 rem;
}
.fzs1 {
  font-size: 0.9 rem;
}
.fzs2 {
  font-size: 0.8 rem;
}
.fzs3 {
  font-size: 0.7 rem;
}
.fzs4 {
  font-size: 0.6 rem;
}
.fzs5 {
  font-size: 0.5 rem;
}
.fzs6 {
  font-size: 0.4 rem;
}
.fzs7 {
  font-size: 0.3 rem;
}
.fzs8 {
  font-size: 0.2 rem;
}

.fw1 {
  font-weight: 80;
}
.fw2 {
  font-weight: 100;
}
.fw3 {
  font-weight: 250;
}
.fw4 {
  font-weight: 400;
}
.fw5 {
  font-weight: 600;
}
.fw6 {
  font-weight: 800;
}
.fw-light {
  font-weight: 200;
}
.fw-bold {
  font-weight: 600;
}
.fw-bolder {
  font-weight: 800;
}

.cols {
  display: flex;
  margin: -0.4rem;
}
.cols.col {
  flex: none;
  display: block;
}

.fx {
  display: flex;
}
.fx.fxWrap {
  flex-wrap: wrap;
}
.fx .fxGrow {
  flex-grow: 1;
}
.fx .fxFlex {
  flex: 1;
}

.btn {
  --ColorBtn: var(--Color);
  --ColorBtnBg: linear-gradient(var(--BgColor), var(--BgColor), var(--BgColor));
  --ColorBtnBorder: var(--Color);
  --ColorBtnHover: linear-gradient(var(--BgColorHover), var(--BgColorHover), var(--BgColorHover));
  --RadiusBtnBorder: 0.3rem;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  white-space: nowrap;
  cursor: pointer;
  color: var(--ColorBtn);
  text-align: center;
  box-sizing: border-box;
  outline: none;
  font-weight: 400;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  vertical-align: middle;
  background: var(--ColorBtnBg);
  border: thin solid var(--ColorBtnBorder);
  padding: 0.3rem 1rem;
  font-size: 1rem;
  border-radius: var(--RadiusBtnBorder);
  transition: all 1s ease-in-out;
}
.btn + .btn {
  margin-left: 0.4rem;
}
.btn.plain {
  --ColorBtnBg: var(--BgColor);
  --ColorBtn: var(--ColorBtnBorder);
}
.btn.plain:hover {
  --ColorBtn: var(--ColorBtn);
}
.btn.round {
  --RadiusBtnBorder: 2rem;
}
.btn:where(:hover, :focus) {
  background: var(--ColorBtnHover);
  transition: opacity 3s ease-in-out;
}
.btn.primary {
  --ColorBtn: var(--ColorPrimary);
  --ColorBtnBg: linear-gradient(var(--ColorPrimaryBg), var(--ColorPrimaryBg), var(--ColorPrimaryBg));
  --ColorBtnBorder: var(--ColorPrimaryBorder);
  --ColorBtnHover: linear-gradient(var(--ColorPrimaryHover), var(--ColorPrimaryHover), var(--ColorPrimaryHover));
}
.btn.primary.gradient {
  --ColorBtnBg: linear-gradient(var(--ColorPrimaryBg), #222, var(--ColorPrimaryBg));
  --ColorBtnHover: linear-gradient(var(--ColorPrimaryHover), #222, var(--ColorPrimaryHover));
}
.btn.primary.plain {
  --ColorBtnBg: var(--BgColor);
  --ColorBtn: var(--ColorBtnBorder);
}
.btn.primary.plain:hover {
  --ColorBtn: var(--ColorPrimary);
}
.btn.info {
  --ColorBtn: var(--ColorInfo);
  --ColorBtnBg: linear-gradient(var(--ColorInfoBg), var(--ColorInfoBg), var(--ColorInfoBg));
  --ColorBtnBorder: var(--ColorInfoBorder);
  --ColorBtnHover: linear-gradient(var(--ColorInfoHover), var(--ColorInfoHover), var(--ColorInfoHover));
}
.btn.info.gradient {
  --ColorBtnBg: linear-gradient(var(--ColorInfoBg), #222, var(--ColorInfoBg));
  --ColorBtnHover: linear-gradient(var(--ColorInfoHover), #222, var(--ColorInfoHover));
}
.btn.info.plain {
  --ColorBtnBg: var(--BgColor);
  --ColorBtn: var(--ColorBtnBorder);
}
.btn.info.plain:hover {
  --ColorBtn: var(--ColorInfo);
}
.btn.success {
  --ColorBtn: var(--ColorSuccess);
  --ColorBtnBg: linear-gradient(var(--ColorSuccessBg), var(--ColorSuccessBg), var(--ColorSuccessBg));
  --ColorBtnBorder: var(--ColorSuccessBorder);
  --ColorBtnHover: linear-gradient(var(--ColorSuccessHover), var(--ColorSuccessHover), var(--ColorSuccessHover));
}
.btn.success.gradient {
  --ColorBtnBg: linear-gradient(var(--ColorSuccessBg), #222, var(--ColorSuccessBg));
  --ColorBtnHover: linear-gradient(var(--ColorSuccessHover), #222, var(--ColorSuccessHover));
}
.btn.success.plain {
  --ColorBtnBg: var(--BgColor);
  --ColorBtn: var(--ColorBtnBorder);
}
.btn.success.plain:hover {
  --ColorBtn: var(--ColorSuccess);
}
.btn.warning {
  --ColorBtn: var(--ColorWarning);
  --ColorBtnBg: linear-gradient(var(--ColorWarningBg), var(--ColorWarningBg), var(--ColorWarningBg));
  --ColorBtnBorder: var(--ColorWarningBorder);
  --ColorBtnHover: linear-gradient(var(--ColorWarningHover), var(--ColorWarningHover), var(--ColorWarningHover));
}
.btn.warning.gradient {
  --ColorBtnBg: linear-gradient(var(--ColorWarningBg), #222, var(--ColorWarningBg));
  --ColorBtnHover: linear-gradient(var(--ColorWarningHover), #222, var(--ColorWarningHover));
}
.btn.warning.plain {
  --ColorBtnBg: var(--BgColor);
  --ColorBtn: var(--ColorBtnBorder);
}
.btn.warning.plain:hover {
  --ColorBtn: var(--ColorWarning);
}
.btn.alert {
  --ColorBtn: var(--ColorAlert);
  --ColorBtnBg: linear-gradient(var(--ColorAlertBg), var(--ColorAlertBg), var(--ColorAlertBg));
  --ColorBtnBorder: var(--ColorAlertBorder);
  --ColorBtnHover: linear-gradient(var(--ColorAlertHover), var(--ColorAlertHover), var(--ColorAlertHover));
}
.btn.alert.gradient {
  --ColorBtnBg: linear-gradient(var(--ColorAlertBg), #222, var(--ColorAlertBg));
  --ColorBtnHover: linear-gradient(var(--ColorAlertHover), #222, var(--ColorAlertHover));
}
.btn.alert.plain {
  --ColorBtnBg: var(--BgColor);
  --ColorBtn: var(--ColorBtnBorder);
}
.btn.alert.plain:hover {
  --ColorBtn: var(--ColorAlert);
}
.btn.danger {
  --ColorBtn: var(--ColorDanger);
  --ColorBtnBg: linear-gradient(var(--ColorDangerBg), var(--ColorDangerBg), var(--ColorDangerBg));
  --ColorBtnBorder: var(--ColorDangerBorder);
  --ColorBtnHover: linear-gradient(var(--ColorDangerHover), var(--ColorDangerHover), var(--ColorDangerHover));
}
.btn.danger.gradient {
  --ColorBtnBg: linear-gradient(var(--ColorDangerBg), #222, var(--ColorDangerBg));
  --ColorBtnHover: linear-gradient(var(--ColorDangerHover), #222, var(--ColorDangerHover));
}
.btn.danger.plain {
  --ColorBtnBg: var(--BgColor);
  --ColorBtn: var(--ColorBtnBorder);
}
.btn.danger.plain:hover {
  --ColorBtn: var(--ColorDanger);
}